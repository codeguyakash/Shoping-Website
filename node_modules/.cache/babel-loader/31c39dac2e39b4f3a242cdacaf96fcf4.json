{"ast":null,"code":"var _jsxFileName = \"D:\\\\Job-Task\\\\brainydxjobtask\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst uniqueList = [...new Set(Menu.map(curElem => {\n  return curElem.category;\n})), \"All\"];\nconsole.log(uniqueList);\n\nconst Resturant = () => {\n  _s();\n\n  const [menuData, setMenuData] = useState(Menu);\n  const [menuList, setMenuList] = useState(uniqueList);\n\n  const filterItem = category => {\n    if (category === \"All\") {\n      setMenuData(Menu);\n      return;\n    }\n\n    const updatedList = Menu.filter(curElem => {\n      return curElem.category === category;\n    });\n    setMenuData(updatedList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      filterItem: filterItem,\n      menuList: menuList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-group\",\n        children: menuList.map(curElem => {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-group__item\",\n            onClick: () => filterItem(curElem),\n            children: curElem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(MenuCard, {\n      menuData: menuData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Resturant, \"zaXZVbXqkPvKTOI3+oCz3SzPzW4=\");\n\n_c = Resturant;\nexport default Resturant;\n\nvar _c;\n\n$RefreshReg$(_c, \"Resturant\");","map":{"version":3,"sources":["D:/Job-Task/brainydxjobtask/src/index.js"],"names":["React","useState","uniqueList","Set","Menu","map","curElem","category","console","log","Resturant","menuData","setMenuData","menuList","setMenuList","filterItem","updatedList","filter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,aAAP;;;AAGA,MAAMC,UAAU,GAAG,CACf,GAAG,IAAIC,GAAJ,CACCC,IAAI,CAACC,GAAL,CAAUC,OAAD,IAAa;AAClB,SAAOA,OAAO,CAACC,QAAf;AACH,CAFD,CADD,CADY,EAMf,KANe,CAAnB;AASAC,OAAO,CAACC,GAAR,CAAYP,UAAZ;;AAGA,MAAMQ,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAACG,IAAD,CAAxC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAACC,UAAD,CAAxC;;AAIA,QAAMa,UAAU,GAAIR,QAAD,IAAc;AAE7B,QAAIA,QAAQ,KAAK,KAAjB,EAAwB;AACpBK,MAAAA,WAAW,CAACR,IAAD,CAAX;AACA;AACH;;AAED,UAAMY,WAAW,GAAGZ,IAAI,CAACa,MAAL,CAAaX,OAAD,IAAa;AACzC,aAAOA,OAAO,CAACC,QAAR,KAAqBA,QAA5B;AACH,KAFmB,CAApB;AAIAK,IAAAA,WAAW,CAACI,WAAD,CAAX;AACH,GAZD;;AAcA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,UAAU,EAAED,UAApB;AAAgC,MAAA,QAAQ,EAAEF;AAA1C;AAAA;AAAA;AAAA;AAAA,YADJ,eAGQ;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBACKA,QAAQ,CAACR,GAAT,CAAcC,OAAD,IAAa;AACvB,8BACI;AAAQ,YAAA,SAAS,EAAC,iBAAlB;AAAoC,YAAA,OAAO,EAAE,MAAMS,UAAU,CAACT,OAAD,CAA7D;AAAA,sBAAyEA;AAAzE;AAAA;AAAA;AAAA;AAAA,kBADJ;AAGH,SAJA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHR,eAiBI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEK;AAApB;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA,kBADJ;AAqBH,CAzCD;;GAAMD,S;;KAAAA,S;AA2CN,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./style.css\";\n\n\nconst uniqueList = [\n    ...new Set(\n        Menu.map((curElem) => {\n            return curElem.category;\n        })\n    ),\n    \"All\",\n];\n\nconsole.log(uniqueList);\n\n\nconst Resturant = () => {\n    const [menuData, setMenuData] = useState(Menu);\n    const [menuList, setMenuList] = useState(uniqueList);\n\n\n\n    const filterItem = (category) => {\n\n        if (category === \"All\") {\n            setMenuData(Menu);\n            return;\n        }\n\n        const updatedList = Menu.filter((curElem) => {\n            return curElem.category === category;\n        });\n\n        setMenuData(updatedList);\n    };\n\n    return (\n        <>\n            <Navbar filterItem={filterItem} menuList={menuList} />\n           \n                <nav className=\"navbar\">\n                    <div className=\"btn-group\">\n                        {menuList.map((curElem) => {\n                            return (\n                                <button className=\"btn-group__item\" onClick={() => filterItem(curElem)}>{curElem}</button>\n                            )\n                        })}\n                    </div>\n                </nav>\n            \n            \n\n\n            \n            <MenuCard menuData={menuData} />\n        </>\n    );\n};\n\nexport default Resturant;"]},"metadata":{},"sourceType":"module"}