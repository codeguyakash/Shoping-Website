{"ast":null,"code":"var _jsxFileName = \"D:\\\\Job-Task\\\\brainydxjobtask\\\\src\\\\component\\\\Basics\\\\Ecom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // import Menu from \"./menuApi.js\";\n// import Product from \"./API\";\n\nimport MenuCard from \"./MenuCard\";\nimport Navbar from \"./Navbar\"; // const uniqueList = [\n//     ...new Set(\n//         Product.map((curElem) => {\n//             return curElem.category;\n//         })\n//     ),\n//     \"All\",\n// ];\n// console.log(uniqueList);\n// const Resturant = () => {\n//     const [menuData, setMenuData] = useState(Product);\n//     const [menuList, setMenuList] = useState(uniqueList);\n//     const filterItem = (category) => {\n//         if (category === \"All\") {\n//             setMenuData(Product);\n//             return;\n//         }\n//         const updatedList = Product.filter((curElem) => {\n//             return curElem.category === category;\n//         });\n//         setMenuData(updatedList);\n//     };\n//     return (\n//         <>\n//             <Navbar filterItem={filterItem} menuList={menuList} />\n//             <MenuCard menuData={menuData} />\n//         </>\n//     );\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Product = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [filter, setFilter] = useState(data);\n  const [loading, setLoading] = useState(false);\n  let componentMounted = true;\n  useEffect(() => {\n    const getProducts = async () => {\n      setLoading(true);\n      const response = await fetch(\"https://fakestoreapi.com/products\");\n\n      if (componentMounted) {\n        setData(await response.clone().json());\n        setFilter(await response.json());\n        setLoading(false);\n        console.log(filter);\n      }\n\n      return () => {\n        componentMounted = false;\n      };\n    };\n\n    getProducts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      setFilter: setFilter,\n      setLoading: setLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MenuCard, {\n      setData: setData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Product, \"iJ9m3QEWFNS7X4k6FQwy0Nt0eic=\");\n\n_c = Product;\nexport default Product; // export default Resturant;\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["D:/Job-Task/brainydxjobtask/src/component/Basics/Ecom.js"],"names":["React","useState","useEffect","MenuCard","Navbar","Product","data","setData","filter","setFilter","loading","setLoading","componentMounted","getProducts","response","fetch","clone","json","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;AACA;;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAElB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAACK,IAAD,CAApC;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,MAAIW,gBAAgB,GAAG,IAAvB;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,WAAW,GAAG,YAAY;AAC5BF,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAD,CAA5B;;AACA,UAAIH,gBAAJ,EAAsB;AAClBL,QAAAA,OAAO,CAAC,MAAMO,QAAQ,CAACE,KAAT,GAAiBC,IAAjB,EAAP,CAAP;AACAR,QAAAA,SAAS,CAAC,MAAMK,QAAQ,CAACG,IAAT,EAAP,CAAT;AACAN,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;AACH;;AACD,aAAO,MAAM;AACTI,QAAAA,gBAAgB,GAAG,KAAnB;AACH,OAFD;AAGH,KAZD;;AAcAC,IAAAA,WAAW;AACd,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAEJ,SAAnB;AAA8B,MAAA,UAAU,EAAEE;AAA1C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEJ;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAMH,CA/BD;;GAAMF,O;;KAAAA,O;AAkCN,eAAeA,OAAf,C,CACA","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\n// import Menu from \"./menuApi.js\";\r\n// import Product from \"./API\";\r\nimport MenuCard from \"./MenuCard\";\r\nimport Navbar from \"./Navbar\";\r\n\r\n\r\n// const uniqueList = [\r\n//     ...new Set(\r\n//         Product.map((curElem) => {\r\n//             return curElem.category;\r\n//         })\r\n//     ),\r\n//     \"All\",\r\n// ];\r\n\r\n// console.log(uniqueList);\r\n\r\n\r\n// const Resturant = () => {\r\n//     const [menuData, setMenuData] = useState(Product);\r\n//     const [menuList, setMenuList] = useState(uniqueList);\r\n\r\n\r\n\r\n//     const filterItem = (category) => {\r\n\r\n//         if (category === \"All\") {\r\n//             setMenuData(Product);\r\n//             return;\r\n//         }\r\n\r\n//         const updatedList = Product.filter((curElem) => {\r\n//             return curElem.category === category;\r\n//         });\r\n\r\n//         setMenuData(updatedList);\r\n//     };\r\n\r\n//     return (\r\n//         <>\r\n//             <Navbar filterItem={filterItem} menuList={menuList} />\r\n//             <MenuCard menuData={menuData} />\r\n//         </>\r\n//     );\r\n// };\r\n\r\nconst Product = () => {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [filter, setFilter] = useState(data);\r\n    const [loading, setLoading] = useState(false);\r\n    let componentMounted = true;\r\n\r\n    useEffect(() => {\r\n        const getProducts = async () => {\r\n            setLoading(true);\r\n            const response = await fetch(\"https://fakestoreapi.com/products\");\r\n            if (componentMounted) {\r\n                setData(await response.clone().json());\r\n                setFilter(await response.json());\r\n                setLoading(false);\r\n                console.log(filter);\r\n            }\r\n            return () => {\r\n                componentMounted = false;\r\n            }\r\n        }\r\n\r\n        getProducts();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Navbar setFilter={setFilter} setLoading={setLoading} />\r\n            <MenuCard setData={setData} />\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default Product;\r\n// export default Resturant;"]},"metadata":{},"sourceType":"module"}